# ### Build environment
# FROM node:latest as builder

# ENV HOME=/usr/src/app

# RUN apt-get update
# RUN apt-get upgrade -y
# RUN apt-get -y install autoconf automake libtool nasm make pkg-config git apt-utils

# # Create app directory
# RUN mkdir -p ${HOME}
# WORKDIR ${HOME}

# # Versions
# RUN npm -v
# RUN node -v

# # Install web app dependencies
# COPY package.json .
# RUN npm install

# # Bundle app source
# COPY . ${HOME}

# # Install quasar cli
# RUN npm install -g @quasar/cli

# RUN quasar build

# RUN pwd
# RUN ls

# ### production environment
# FROM nginx:1.17.5-alpine as production-stage
# COPY --from=builder /usr/src/app/dist/spa /usr/share/nginx/html
# RUN rm /etc/nginx/conf.d/default.conf
# COPY --from=builder /usr/src/app/nginx.conf /etc/nginx/conf.d/default.conf
# EXPOSE 80
# CMD ["nginx", "-g", "daemon off;"]

# develop stage
FROM node:13.0-alpine as develop-stage
WORKDIR /app
COPY package*.json ./
RUN yarn global add @quasar/cli
COPY . .
# build stage
FROM develop-stage as build-stage
RUN yarn
RUN quasar build
# production stage
FROM nginx:1.17.5-alpine as production-stage
COPY --from=build-stage /app/dist/spa /usr/share/nginx/html
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]